<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app PUBLIC
	"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
	"http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

	<display-name>Canvac Web Store</display-name>
    <description>Canvac Web Order Application</description>

    <!-- the context-param tag specifies initialization parameter values
      - for the whole Web application (init-para tag is only for servlet/filter) i.e. linked to the ServletContext
      -->

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webstore.root</param-value>
	</context-param>

	<!--
	  - Location of the Log4J config file, for initialization and refresh checks.
	  - Applied by Log4jConfigListener.
	  -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param>

	<!--
	    - Spring application context.
	  -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/dataAccessContext-local.xml  /WEB-INF/applicationContext.xml
		</param-value>
	</context-param>

        <!-- Define the basename for the resource bundle to be available to Jstl -->
     <context-param>
         <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
         <param-value>messages</param-value>
     </context-param>
        <!-- Fallback locale if no bundles found for browser's preferred locale -->
        <!-- Force a single locale using param-name 'javax.servlet.jsp.jstl.fmt.locale' -->
     <context-param>
         <param-name>javax.servlet.jsp.jstl.fmt.fallbackLocale</param-name>
         <param-value>en</param-value>
     </context-param>

     <listener>
	    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	 </listener>

    <!-- Loads the root application context of this web app at startup,
	    - by default from "/WEB-INF/applicationContext.xml".
		-
	    - Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
	    - to access it anywhere in the web application, outside of the framework.
	    -
	    - The root context is the parent of all servlet-specific contexts.
	    - This means that its beans are automatically available in these child contexts,
	    - both for getBean(name) calls and (external) bean references.
       -->
    <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<!--
	    - Struts servlet that dispatches requests to registered actions.
    	- Reads its configuration from "struts-config.xml".
		-
		- A web app can just contain one such servlet.
    -->
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
        <init-param>
           <param-name>config</param-name>
           <param-value>/WEB-INF/struts-config.xml</param-value>
        </init-param>
    	<load-on-startup>1</load-on-startup>
	</servlet>


	<!--
		- Dispatcher servlet mapping for the main web user interface.
		- Refering to "action" for the Struts dispatcher.
        - *.do pattern means that all request under application root that
        - targets an action name followed by .do will be processed by the action servlet
		-->
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>


    <!--
        - This indicates a 30minutes time out for all session object created
        - within the Web app, all session handled by servlet can overwrite this
        - through the setMaxInactiveInterval() attribute of the HTTPSession
        -->

      <session-config>
          <session-timeout>30</session-timeout>
      </session-config>


    <!--
        - Welcome file list defines the default file(s) for all directories
        - If a request is done specifically on a directory, the welcome file
        - will be returned only if it exist within this dir
        -->

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

</web-app>
